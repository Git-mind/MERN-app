{"ast":null,"code":"import { AUTH } from '../constants/actionTypes';\nimport * as api from '../api'; // if the action creators are asynchronous, need to use redux-thunk.\n// A signin function that return an async function with a dispatch\n\nexport const signin = (formData, history) => async dispatch => {\n  try {\n    // log in the user..\n    // make a call to signIn api\n    const {\n      data\n    } = await api.signIn(formData); //once we have our data, pass data to reducer\n\n    dispatch({\n      type: AUTH,\n      data\n    }); // after logged in, push user to the homepage\n\n    history.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const signup = (formData, history) => async dispatch => {\n  try {\n    // sign in the user..\n    console.log(datga);\n    const {\n      data\n    } = await api.signUp(formData); //once we have our data, pass data to reducer\n\n    dispatch({\n      type: AUTH,\n      data\n    }); // after logged in, push user to the homepage\n\n    history.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["AUTH","api","signin","formData","history","dispatch","data","signIn","type","push","error","console","log","signup","datga","signUp"],"sources":["C:/MERN app/client/src/actions/auth.js"],"sourcesContent":["import { AUTH } from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n\r\n// if the action creators are asynchronous, need to use redux-thunk.\r\n// A signin function that return an async function with a dispatch\r\nexport const signin = (formData, history) => async(dispatch) =>{\r\n    try {\r\n        // log in the user..\r\n        // make a call to signIn api\r\n        const { data } = await api.signIn(formData);\r\n\r\n        //once we have our data, pass data to reducer\r\n        dispatch({ type: AUTH, data})\r\n\r\n        // after logged in, push user to the homepage\r\n        history.push('/')\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const signup = (formData, history) => async(dispatch) =>{\r\n    try {\r\n        // sign in the user..\r\n        console.log(datga)\r\n        const { data } = await api.signUp(formData);\r\n\r\n        //once we have our data, pass data to reducer\r\n        dispatch({ type: AUTH, data})\r\n\r\n        // after logged in, push user to the homepage\r\n        history.push('/')\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"],"mappings":"AAAA,SAASA,IAAT,QAAqB,0BAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB,C,CAEA;AACA;;AACA,OAAO,MAAMC,MAAM,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;EAC3D,IAAI;IACA;IACA;IACA,MAAM;MAAEC;IAAF,IAAW,MAAML,GAAG,CAACM,MAAJ,CAAWJ,QAAX,CAAvB,CAHA,CAKA;;IACAE,QAAQ,CAAC;MAAEG,IAAI,EAAER,IAAR;MAAcM;IAAd,CAAD,CAAR,CANA,CAQA;;IACAF,OAAO,CAACK,IAAR,CAAa,GAAb;EACH,CAVD,CAUE,OAAOC,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAdM;AAgBP,OAAO,MAAMG,MAAM,GAAG,CAACV,QAAD,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;EAC3D,IAAI;IACA;IACAM,OAAO,CAACC,GAAR,CAAYE,KAAZ;IACA,MAAM;MAAER;IAAF,IAAW,MAAML,GAAG,CAACc,MAAJ,CAAWZ,QAAX,CAAvB,CAHA,CAKA;;IACAE,QAAQ,CAAC;MAAEG,IAAI,EAAER,IAAR;MAAcM;IAAd,CAAD,CAAR,CANA,CAQA;;IACAF,OAAO,CAACK,IAAR,CAAa,GAAb;EACH,CAVD,CAUE,OAAOC,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAdM"},"metadata":{},"sourceType":"module"}