{"ast":null,"code":"import * as api from '../api'; // Action Creators - function that return an action. \n// Action is just a type and payload\n// with redux thunk, allows to add async(dispatch). Instead of return action, dispatch(actions);\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    console.log(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post","updatePost","id","deletePost"],"sources":["C:/MERN app/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api';\r\n\r\n// Action Creators - function that return an action. \r\n// Action is just a type and payload\r\n// with redux thunk, allows to add async(dispatch). Instead of return action, dispatch(actions);\r\nexport const getPosts = () => async(dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n\r\n        dispatch( { type: 'FETCH_ALL', payload: data });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n    \r\n\r\n\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.createPost(post);\r\n        console.log(post)\r\n        dispatch({type: 'CREATE', payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) =>{\r\n    try {\r\n        const {data} = await api.updatePost(id, post);\r\n\r\n        dispatch({type: 'UPDATE', payload: data})\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async(dispatch) =>{\r\n    try {\r\n        await api.deletePost(id)\r\n\r\n        dispatch({type: 'DELETE', payload: id});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB,C,CAEA;AACA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAmB;EAC7C,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB;IAEAF,QAAQ,CAAE;MAAEG,IAAI,EAAE,WAAR;MAAqBC,OAAO,EAAEH;IAA9B,CAAF,CAAR;EACH,CAJD,CAIE,OAAOI,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;EACH;AAIJ,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;EACpD,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMH,GAAG,CAACW,UAAJ,CAAeC,IAAf,CAArB;IACAJ,OAAO,CAACC,GAAR,CAAYG,IAAZ;IACAV,QAAQ,CAAC;MAACG,IAAI,EAAE,QAAP;MAAiBC,OAAO,EAAEH;IAA1B,CAAD,CAAR;EACH,CAJD,CAIE,OAAOI,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CARM;AAUP,OAAO,MAAMM,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOV,QAAP,IAAmB;EACvD,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMH,GAAG,CAACa,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAArB;IAEAV,QAAQ,CAAC;MAACG,IAAI,EAAE,QAAP;MAAiBC,OAAO,EAAEH;IAA1B,CAAD,CAAR;EACH,CAJD,CAIE,OAAOI,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;EACH;AACJ,CARM;AAUP,OAAO,MAAMK,UAAU,GAAID,EAAD,IAAQ,MAAMZ,QAAN,IAAkB;EAChD,IAAI;IACA,MAAMF,GAAG,CAACe,UAAJ,CAAeD,EAAf,CAAN;IAEAZ,QAAQ,CAAC;MAACG,IAAI,EAAE,QAAP;MAAiBC,OAAO,EAAEQ;IAA1B,CAAD,CAAR;EACH,CAJD,CAIE,OAAOP,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CARM"},"metadata":{},"sourceType":"module"}