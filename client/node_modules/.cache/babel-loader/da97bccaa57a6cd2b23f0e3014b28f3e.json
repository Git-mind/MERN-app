{"ast":null,"code":"import * as api from '../api'; // Action Creators - function that return an action. \n// Action is just a type and payload\n// with redux thunk, allows to add async(dispatch). Instead of return action, dispatch(actions);\n\nconst getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    displatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["api","getPosts","dispatch","data","fetchPosts","displatch","type","payload","error","console","log","message"],"sources":["C:/MERN app/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api';\r\n\r\n// Action Creators - function that return an action. \r\n// Action is just a type and payload\r\n// with redux thunk, allows to add async(dispatch). Instead of return action, dispatch(actions);\r\nconst getPosts = () => async(dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n\r\n        displatch( { type: 'FETCH_ALL', payload: data });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n    \r\n\r\n\r\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB,C,CAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAmB;EACtC,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB;IAEAC,SAAS,CAAE;MAAEC,IAAI,EAAE,WAAR;MAAqBC,OAAO,EAAEJ;IAA9B,CAAF,CAAT;EACH,CAJD,CAIE,OAAOK,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;EACH;AAIJ,CAXD"},"metadata":{},"sourceType":"module"}